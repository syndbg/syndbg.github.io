<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Anton Antonov's mindspace</title><link>https://syndbg.github.io/</link><description></description><atom:link href="https://syndbg.github.io/feeds/anton-antonov.rss.xml" rel="self"></atom:link><lastBuildDate>Sat, 23 Aug 2014 00:00:00 +0300</lastBuildDate><item><title>Atom: Setting up for Python Development</title><link>https://syndbg.github.io/atom-setting-up-for-python-development.html</link><description>&lt;h2&gt;1. Installation&lt;/h2&gt;

&lt;p&gt;Taken from &lt;a href="http://www.webupd8.org/2014/06/atom-text-editor-available-for-linux.html"&gt;http://www.webupd8.org/2014/06/atom-text-editor-available-for-linux.html&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="n"&gt;ppa&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;webupd8team&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;atom&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;2. GitHub recommended first steps&lt;/h2&gt;

&lt;p&gt;The following guides are a must-read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/atom/atom/blob/master/docs/getting-started.md"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atom/atom/blob/master/docs/customizing-atom.md"&gt;Customizing Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atom/atom/blob/master/docs/debugging.md"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;3. Packages for Python development&lt;/h2&gt;

&lt;p&gt;By default Atom has Python language syntax highlighting and snippets, but lacks a linter.
I recommend &lt;a href="https://bitbucket.org/tarek/flake8/src"&gt;flake8&lt;/a&gt;, which is a wrapper for &lt;a href="https://pypi.python.org/pypi/pyflakes"&gt;pyflakes&lt;/a&gt;, &lt;a href="https://pypi.python.org/pypi/pep8"&gt;pep8&lt;/a&gt; and &lt;a href="https://pypi.python.org/pypi/mccabe"&gt;Ned Batchelderâs McCabe script&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;3.1. Install pypi package &lt;a href="https://pypi.python.org/pypi/flake8"&gt;flake8&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: have pip pre-installed&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;flake8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;3.2. Install Atom packages - &lt;a href="https://atom.io/packages/linter"&gt;linter&lt;/a&gt; and &lt;a href="https://atom.io/packages/linter-flake8"&gt;linter-flake8&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;linter&lt;/code&gt; is a static code analysis tool and &lt;code&gt;linter-flake8&lt;/code&gt; is an addon to &lt;code&gt;linter&lt;/code&gt; and also an interface for &lt;a href="https://bitbucket.org/tarek/flake8/src"&gt;flake8&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;linter&lt;/span&gt;
&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;linter&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;flake8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;4. Development settings&lt;/h2&gt;

&lt;p&gt;These can be modified through the Settings panel, but it's faster if we just edit &lt;code&gt;~/.atom/config.cson&lt;/code&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s"&gt;&amp;#39;welcome&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;showOnStartup&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;metrics&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;editor&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;preferredLineLength&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;showInvisibles&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;tabLength&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;scrollSensitivity&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;showIndentGuide&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;core&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;disabledPackages&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;welcome&amp;#39;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;styleguide&amp;#39;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;spell-check&amp;#39;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;metrics&amp;#39;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;feedback&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;ignoredNames&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;*.pyc&amp;#39;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;*.*~&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;tree-view&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;showOnRightSide&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;linter-pep8&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;ignoreErrorCodes&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;W0232&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;linter-flake8&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;maxLineLength&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;linter&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;showStatusBarWhenCursorIsInErrorRange&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;5. Other useful development packages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/atom/sort-lines"&gt;Sort-lines&lt;/a&gt; - sorts lines and it never gets tiring.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/mizchi/atom-git-grep"&gt;Git-grep&lt;/a&gt; - performs a grep on your whole repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/richrace/highlight-line"&gt;Highlight-line&lt;/a&gt; - highlights the current line with some extra options as underlining with solid, dotted or solid line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/smashwilson/merge-conflicts"&gt;Merge-conflicts&lt;/a&gt; - a more visual way to resolve merge conflicts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;conflicts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;6. Nicer themes and syntax highlighting&lt;/h2&gt;

&lt;p&gt;These are recommended by me, but many more can be found at &lt;a href="https://atom.io/themes/"&gt;Atom.io themes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;6.1 UI themes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jesseweed/seti-ui"&gt;Seti-UI, a dark colored UI theme&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;seti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jesseweed/yeti-ui"&gt;Yeti-UI, a light colored UI theme&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;yeti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/dmackerman/atom-soda-dark-ui"&gt;Soda-dark-UI, a port of Sublime Text 3's Soda Dark UI theme&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;soda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://atom.io/themes/unity-ui"&gt;Unity-UI, a more native OSX experience&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;unity&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/brentd/neutron-ui"&gt;Neutron-UI, an almost flat UI theme in shades of gunmetal and medium-contrast colors&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;neutron&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;6.2 Syntax highlighting themes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/kevinsawicki/monokai"&gt;Monokai&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;monokai&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jesseweed/seti-syntax"&gt;Seti-syntax&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;seti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;syntax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/joaoafrmartins/seti-monokai"&gt;Seti-monokai&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;seti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;monokai&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jesseweed/yeti-syntax"&gt;Yeti-syntax&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;yeti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;syntax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/brentd/neutron-syntax"&gt;Neutron-syntax&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;neutron&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;syntax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;7. Useful custom keybinds&lt;/h2&gt;

&lt;p&gt;These are the custom keybinds I use. Edit ~/.atom/keymap.cson&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s"&gt;&amp;#39;.workspace&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;ctrl-G&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;git-grep:grep&amp;#39;&lt;/span&gt;

&lt;span class="s"&gt;&amp;#39;.body&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;ctrl-O&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;application:open-folder&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the end, this is how my Atom looks like with Seti-ui and Seti-monokai
&lt;a href="https://raw.githubusercontent.com/syndbg/syndbg.github.io/master/static/atom_configured.png"&gt;&lt;img alt="Configured atom" src="https://raw.githubusercontent.com/syndbg/syndbg.github.io/master/static/atom_configured.png" title="Configured Atom" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Sat, 23 Aug 2014 00:00:00 +0300</pubDate><guid>tag:syndbg.github.io,2014-08-23:atom-setting-up-for-python-development.html</guid><category></category></item><item><title>Python: Introduction to working with the Bitbucket/Github API</title><link>https://syndbg.github.io/python-working-with-the-bitbucket-github-api.html</link><description>&lt;p&gt;Nowdays Bitbucket and Github are the places to store your projects in an organized manner.&lt;/p&gt;

&lt;p&gt;They have their pros and cons but both are irreplaceable. They offer RESTful Web APIs.&lt;/p&gt;

&lt;p&gt;REST in fewest words posssible: you send a HTTP request to a URL, you get a HTTP response and data.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Start with the amazing &lt;a href="http://restbrowser.bitbucket.org/"&gt;Bitbucket REST API Browser&lt;/a&gt;.
It's the best introduction tool. You get a very good representation what kind of request you're making,
where do you send it to and what response and data do you get.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After you feel comfortable with the use of a REST Web API, you must learn how to use it in Python.
2.1 You can use the amazing &lt;a href="http://docs.python-requests.org/en/latest/"&gt;requests library&lt;/a&gt; and just send requests to the URLs you already know.
2.2 You can use a library that wraps requests to URLs for you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decision making
I have experience with both and I can say that both have their use, depending on the complexity of your task.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finding a working and up-to-date Python library for Bitbucket and Github is hard and unrealiable.
You must trust the fellow developing the library had it all thought out, tested and documented but reality is quite different.&lt;/p&gt;

&lt;p&gt;Most of the libraries are unstable and you rarely find something that works without a problems, but that's understandable and common.&lt;/p&gt;

&lt;p&gt;You must make sacrifices and that's ok if you realize the risks or time isn't your concern.&lt;/p&gt;

&lt;p&gt;Recently my fair share with the Github API was a task that involved a lot of data fetching. Repositories info, open/clossed issues, commits count and statistics.&lt;/p&gt;

&lt;p&gt;Pretty much the whole range of Github API features. The Github devs did well with the RESTful Web API, but there wasn't an official Python Github library. Time was a concern since we had to have this feature working with our Django project in less than 5 days.&lt;/p&gt;

&lt;p&gt;However first two days had to be spent in research and testing the libraries with small scripts. The best I could find was &lt;a href="https://github.com/jacquev6/PyGithub/"&gt;PyGithub&lt;/a&gt; which has a rough introduction,
but the best documentation you can wish for and the most Github API features implemented.&lt;/p&gt;

&lt;p&gt;The reason for the use of PyGithub when even though time was a concern, is that we worked with a lot of Django models and I had to parse the data. The library already does it for us and I had more time to write on the actual problem.&lt;/p&gt;

&lt;h2&gt;The testing&lt;/h2&gt;

&lt;p&gt;... is hard. Testing with requests is the easiest it could get. However testing a library is a different thing. You have to mock to make it testable and I'm no good with mocking.&lt;/p&gt;

&lt;h2&gt;The actual code&lt;/h2&gt;

&lt;p&gt;Working with the Github API with requests&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://api.github.com/user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;content-type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;application/json; charset=utf8&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;{&amp;quot;type&amp;quot;:&amp;quot;User&amp;quot;...&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;u&amp;#39;private_gists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;419&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;total_private_repos&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The library equivalent&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;github&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Github&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Github&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# an authenticated Github instance&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MainClass&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Github&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7f4945ee3410&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;usr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# returns an AuthenticatedUser&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AuthenticatedUser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AuthenticatedUser&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7f4942f56190&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;syndbg.github.io&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;
&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see the JSON is automatically parsed for you and returned as a datetime object. Such small but important features save time.&lt;/p&gt;

&lt;p&gt;You can build your own library and be confident to do so, it's a great practice!&lt;/p&gt;

&lt;h2&gt;The project feature&lt;/h2&gt;

&lt;p&gt;The custom Django to our project command - &lt;a href="https://github.com/HackBulgaria/Odin/blob/master/students/management/commands/generate_certificates.py"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/HackBulgaria/Odin/blob/master/students/management/commands/helpers/classes.py"&gt;the helpers classes&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 14 Aug 2014 00:00:00 +0300</pubDate><guid>tag:syndbg.github.io,2014-08-14:python-working-with-the-bitbucket-github-api.html</guid><category></category></item><item><title>Migrating the blog from wordpress to github pages</title><link>https://syndbg.github.io/migrating-the-blog-from-wordpress-to-github-pages.html</link><description>&lt;p&gt;After many, many weeks of planning and trying, I can 'officially' start migrating away from wordpress.&lt;/p&gt;

&lt;p&gt;This blog post will be updated in the following weeks.&lt;/p&gt;

&lt;p&gt;P.S There are bugged posts when they were converted to markdown. They'll be fixed soon, don't worry!&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello, Markdown posts!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Fri, 27 Jun 2014 00:00:00 +0300</pubDate><guid>tag:syndbg.github.io,2014-06-27:migrating-the-blog-from-wordpress-to-github-pages.html</guid><category></category></item><item><title>Atom: a potential replacement of Sublime Text 2/3</title><link>https://syndbg.github.io/atom-a-potential-replacement-of-sublime-text-23.html</link><description>&lt;h3&gt;&lt;strong&gt;&lt;a href="https://atom.io/"&gt;Github Atom's website&lt;/a&gt; and &lt;a href="www.webupd8.org/2014/05/atom-text-editor-ubuntu-ppa-update.html"&gt;How to get Atom for Linux&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;h3&gt;&lt;a href="http://www.sublimetext.com/3"&gt;&lt;strong&gt;Sublime Text 3's website&lt;/strong&gt;&lt;/a&gt; and &lt;a href="http://syndbg.wordpress.com/2014/03/04/linux-setting-up-sublime-text-3-for-python-development/"&gt;How to get Sublime Text 3 for Linux&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer: Atom still has to live through the v1.0 release. It's
still in a beta (sort of), so there could be bugs&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;I'll start with a  list the problems I see in Sublime Text 3 and Atom's solution.&lt;/h2&gt;

&lt;h3&gt;1) Contributing is hard&lt;/h3&gt;

&lt;p&gt;However Atom is open sourced under MIT license and you can directly
contribute through the &lt;a href="https://github.com/atom/atom"&gt;atom github repo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;2)  Lack of package control and other necessary packages from the get go&lt;/h3&gt;

&lt;p&gt;The most popular Sublime Text 2/3 plugin for so much time (Package
Control), still isn't added to Sublime Text 3 by default. This, plus
other plugins are lacking in the default.&lt;/p&gt;

&lt;p&gt;However Atom has the most needed Sublime-like plugins installed.&lt;/p&gt;

&lt;h3&gt;3) After effects of Package Control - total packages disarray&lt;/h3&gt;

&lt;p&gt;The github team does one thing perfectly right, they handle the
packages/themes sharing, but also make publishing extremely easy. As
seen &lt;a href="https://atom.io/packages"&gt;here&lt;/a&gt;. The team also released  an Atom
package&lt;/p&gt;

&lt;h3&gt;4) Overcomplicated settings as packages increase. Drop-down menu madness suggested?&lt;/h3&gt;

&lt;p&gt;As installed packages increase, Sublime Text 3 adds more and more
drop-down menus, while also increasing the json settings files. All
results to a cluster of settings in JSON files. While JSON is easy to
use, it doesn't beat the native 2 clicks GUI enable/disable menus in
Atom.&lt;/p&gt;

&lt;h2&gt;Bonus points for Atom&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Core settings done right.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025142.png"&gt;&lt;img alt="Atom core settings" src="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025142.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy individual package settings control.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-024718.png"&gt;&lt;img alt="Atom settings" src="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-024718.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sublime Text 2/3 key bindings carried over, plus super easy
cheatsheet-like options.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025402.png"&gt;&lt;img alt="Atom keybindings" src="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025402.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package control has its attention and it's integrated well&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025536.png"&gt;&lt;img alt="Atom package control" src="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025536.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Themes are themes and don't mix with packages. Also way easier
management.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025759.png"&gt;&lt;img alt="Atom themes" src="http://syndbg.files.wordpress.com/2014/05/screenshot-from-2014-05-20-025759.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOWEVER!&lt;/strong&gt; Many plugins have yet to see an implementation to Atom, so it might be too early for some really plugins-dependent Sublime users to switch. The good thing is that the GitHub team progresses at a steady pace, Atom gathers more and more attention and it won't be long until plugin developers port their plugins for Atom.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Tue, 20 May 2014 00:00:00 +0300</pubDate><guid>tag:syndbg.github.io,2014-05-20:atom-a-potential-replacement-of-sublime-text-23.html</guid><category></category></item><item><title>Python 3 How to: Write Unit tests (PyUnit, pytest, nose)</title><link>https://syndbg.github.io/python-3-how-to-write-unit-tests-unittest-pytest-nose.html</link><description>&lt;h3&gt;In the following blog post I'll cover the following frameworks for unit testing.&lt;/h3&gt;

&lt;p&gt;​1) &lt;a href="http://pyunit.sourceforge.net/" title="PyUnit "&gt;PyUnit&lt;/a&gt;, also known as
unittest in the Python modules.
2) &lt;a href="http://pytest.org/latest/" title="Pytest"&gt;Pytest&lt;/a&gt; - a mature
full-featured Python testing tool that helps you write better programs.
3) &lt;a href="http://nose.readthedocs.org" title="Nose"&gt;Nose&lt;/a&gt; - a nicer testing for
Python? It's more like a unit test loader since it supports all the
above for loading.&lt;/p&gt;

&lt;h3&gt;How to get them?&lt;/h3&gt;

&lt;p&gt;​1) PyUnit - already installed for you. Just import unittest in your
unit tests file&lt;/p&gt;

&lt;p&gt;​2) Pytest - devs guide
-&gt; &lt;a href="http://pytest.org/latest/getting-started.html" title="Pytest install guide"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​3) Nose - devs guide -&gt;
&lt;a href="https://nose.readthedocs.org/en/latest/" title="Nose install guide"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Get to know TDD:&lt;/h3&gt;

&lt;p&gt;TDD - Test-Driven Development or also known as &lt;em&gt;Red, Green and
Refactor. &lt;/em&gt;Can be explained simple in a image.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://thejackalofjavascript.com/wp-content/uploads/2014/02/tdd_flow.gif"&gt;&lt;img alt="TDD flow" src="http://thejackalofjavascript.com/wp-content/uploads/2014/02/tdd_flow.gif" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;How to start writing tests with PyUnit:&lt;/h3&gt;

&lt;p&gt;​1) Import unittest&lt;/p&gt;

&lt;p&gt;​2) Import the code you want to test&lt;/p&gt;

&lt;p&gt;​3) Create a class that inherits  from unittest.TestCase&lt;/p&gt;

&lt;p&gt;​4) Create methods for the class you created that MUST start with test&lt;/p&gt;

&lt;p&gt;​5) Run the tests with the python3 interpreter in the console or your
IDE&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.python.org/3.4/library/unittest.html#assert-methods" title="PyUnit methods"&gt;Useful methods to
know&lt;/a&gt; (framework's
API)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/syndbg/Mini-projects/blob/master/Python/Introduction%20to%20unit%20testing%20frameworks/pyunit_bankaccount_simplified.py" title="PyUnit source code"&gt;Unit test source
code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And when run in the terminal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://i.imgur.com/kggP1vj.png"&gt;&lt;img alt="PyUnit terminal showcase" src="http://i.imgur.com/kggP1vj.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;How to start writing tests with Pytest:&lt;/h3&gt;

&lt;p&gt;​1) Install pytest&lt;/p&gt;

&lt;p&gt;​2) Import the  code you want to test&lt;/p&gt;

&lt;p&gt;​3) Write test functions, it's optional to create a class with methods.&lt;/p&gt;

&lt;p&gt;​4) Run the tests with &lt;em&gt;py.test&lt;/em&gt; in the console&lt;/p&gt;

&lt;p&gt;For Pytest all you need to know is how Python 3's &lt;em&gt;assert&lt;/em&gt; &lt;em&gt;works.
 &lt;/em&gt;&lt;a href="http://pytest.org/latest/assert.html" title="Pytest methods"&gt;Read a little more about Pytest and
assert&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/syndbg/Mini-projects/blob/master/Python/Introduction%20to%20unit%20testing%20frameworks/pytest_bankaccount_simplified.py" title="PyTest source code"&gt;Unit test source code&lt;strong&gt; (framework's
API)&lt;/strong&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And when run in the terminal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://i.imgur.com/Cpfc0Ed.png"&gt;&lt;img alt="Pytest terminal showcase" src="http://i.imgur.com/Cpfc0Ed.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;How to start writing tests with Nose:&lt;/h3&gt;

&lt;p&gt;​1) Install nose&lt;/p&gt;

&lt;p&gt;​2) Import the code you want to test&lt;/p&gt;

&lt;p&gt;​3) Import nose.tools&lt;/p&gt;

&lt;p&gt;​4) Create a class that starts wtih Test&lt;/p&gt;

&lt;p&gt;​5) Create tests (methods) that start with test&lt;/p&gt;

&lt;p&gt;​6) Run the test with &lt;em&gt;nosetests&lt;/em&gt; in the console&lt;/p&gt;

&lt;p&gt;&lt;a href="http://nose.readthedocs.org/en/latest/testing_tools.html#module-nose.tools" title="Nose methods"&gt;&lt;strong&gt;Useful methods  to
know&lt;/strong&gt;&lt;/a&gt; .&lt;strong&gt; (framework's
API)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Most of the time you'll use:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*  &lt;em&gt;ok_&lt;/em&gt; which is a short-hand for *assert&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*  eq_ which is (a, b) and tests if a == b&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/syndbg/Mini-projects/blob/master/Python/Introduction%20to%20unit%20testing%20frameworks/nose_bankaccount_simplified.py" title="Nose source code"&gt;Unit test source
code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And when run in the terminal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://i.imgur.com/wCaBrhm.png"&gt;&lt;img alt="Nose showwcase" src="http://i.imgur.com/wCaBrhm.png" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Sun, 20 Apr 2014 00:00:00 +0300</pubDate><guid>tag:syndbg.github.io,2014-04-20:python-3-how-to-write-unit-tests-unittest-pytest-nose.html</guid><category></category></item><item><title>Python 3 How to: Code coverage (nose way included)</title><link>https://syndbg.github.io/python-3-how-to-code-coverage-nose-included.html</link><description>&lt;p&gt;&lt;strong&gt;First of all, you must download and install
&lt;a href="https://pypi.python.org/pypi/coverage/3.7.1"&gt;coverage.py&lt;/a&gt; with pip.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 style="text-align:left;"&gt;The steps are:&lt;/h3&gt;

&lt;p&gt;​1) First have written tests for the Python program you want to test
2) Run code coverage on the unit tests you've written.
3) Export the report to html for better readability and more details.&lt;/p&gt;

&lt;h4 style="text-align:left;"&gt;and in code:&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;coverage run test_something.py&lt;/code&gt;
&lt;code&gt;coverage report -m&lt;/code&gt;
&lt;code&gt;coverage html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code coverage can now be found in a directory htmlconv/ which is
in the same directory where you run the coverage commands. Open
htmlconv/index.html and see the detailed html version of the code
coverage.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: the -m argument is to show a tab for the missing code coverage&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;And how it looks in action:&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://i.imgur.com/l1JKolA.png" title="Code Coverage in action picture"&gt;&lt;img alt="Code coverage showcase" src="http://i.imgur.com/l1JKolA.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;The nose way&lt;/h2&gt;

&lt;p&gt;​1) You must have nose installed. (pip install nose)
2) Again, you must have written unit tests.
3) Run the code coverage on the unit tests. Done! All in one command :)&lt;/p&gt;

&lt;h4 style="text-align:left;"&gt;and in code:&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;nosetests --with-coverage --cover-html test_something.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code coverage can now be found in a directory cover/ which is in
the same directory where you run the coverage commands. Open
cover/index.html and see the detailed html version of the code
coverage.&lt;/strong&gt;
&lt;em&gt;Note: Nose code coverage doesn't include the unit test file in the
code coverage. To include it add &lt;code&gt;--cover-tests&lt;/code&gt; to the command you
execute.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://i.imgur.com/074oiIV.png" title="Nose code Coverage in action picture"&gt;&lt;img alt="Nose code coverage showcase" src="http://i.imgur.com/074oiIV.png" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Tue, 15 Apr 2014 00:00:00 +0300</pubDate><guid>tag:syndbg.github.io,2014-04-15:python-3-how-to-code-coverage-nose-included.html</guid><category></category></item><item><title>Linux: How to customize your terminal</title><link>https://syndbg.github.io/linux-how-to-customize-your-terminal.html</link><description>&lt;p&gt;In this short tutorial, I'll tell you how to modify your bash into
something more useful for you.&lt;/p&gt;

&lt;p&gt;You can customize your terminal's colors, background, title, cursor and
bash prompt.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;To customize your colors:&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;​1) Open the Terminal Menu&lt;/p&gt;

&lt;p&gt;​2) Navigate to &lt;strong&gt;Edit Profiles&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;3 ) Create a new profile and &lt;strong&gt;Edit&lt;/strong&gt; it&lt;/p&gt;

&lt;p&gt;​4) After you've done editing it, make sure you set &lt;strong&gt;Profile used when
launching a new terminal&lt;/strong&gt; to your new profile's name.&lt;strong&gt;&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;To customize your bash prompt (PS1):&lt;/h3&gt;

&lt;p&gt;We'll use the great &lt;a href="http://bashrcgenerator.com/"&gt;bashrcgenerator.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​1) Open bashgenerator and make your dream PS1&lt;/p&gt;

&lt;p&gt;​2) After you're done, open the terminal's settings. Write &lt;strong&gt;sudo gedit
\~/.bashrc&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​3) First of all save your current &lt;strong&gt;.bashrc&lt;/strong&gt; to &lt;strong&gt;.bashrc_backup
, &lt;/strong&gt;just in case things don't work out from the first time.&lt;/p&gt;

&lt;p&gt;​4) Find PS1 in .bashrc and replace it with &lt;strong&gt;&lt;em&gt;*Your generated .bashrc
PS1 and additional functions&lt;/em&gt;&lt;/strong&gt;* from bashgenerator.&lt;/p&gt;

&lt;p&gt;​5) Close any terminal instances&lt;/p&gt;

&lt;p&gt;​6) Open a new terminal and rejoice.&lt;/p&gt;

&lt;p&gt;If things didn't work from the first time, replace the non-working
&lt;strong&gt;.bashrc&lt;/strong&gt; with the &lt;strong&gt;.bashrc_backup&lt;/strong&gt; and try again!&lt;/p&gt;

&lt;p&gt;If you just want ready to use, awesome PS1, and the colors are Tango:&lt;br /&gt;
&lt;a href="http://syndbg.files.wordpress.com/2014/03/screenshot-from-2014-03-13-132054.png"&gt;&lt;img alt="Screenshot from 2014-03-13
13:20:54" src="http://syndbg.files.wordpress.com/2014/03/screenshot-from-2014-03-13-132054.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PS1="\[\e[00;33m\]\u\[\e[0m\]\[\e[00;37m\] \[\e[0m\]\[\e[00;31m\]@\[\e[0m\]\[\e[00;37m\] \[\e[0m\]\[\e[00;33m\]\w\[\e[0m\]\[\e[00;37m\]\n\[\e[0m\]\[\e[00;31m\]&amp;gt;\[\e[0m\]"&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Extra round: Show current git branch&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Add an extra function in the .bashrc file  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;# show git branch parse_git_branch() {   git branch 2&amp;gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/' }&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And somewhere in the PS1 add the following: &lt;code&gt;\\$(parse_git_branch)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Complete PS1:  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;PS1="\[\e[00;33m\]\u\[\e[0m\]\[\e[00;37m\] \[\e[0m\]\[\e[00;31m\]@\[\e[0m\]\[\e[00;37m\] \[\e[0m\]\[\e[00;33m\]\w\[\e[0m\]\[\e[00;37m\] \$(parse_git_branch) \n\[\e[0m\]\[\e[00;31m\]&amp;gt;\[\e[0m\]"&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 13 Mar 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-03-13:linux-how-to-customize-your-terminal.html</guid><category></category></item><item><title>Linux: Setting up Sublime Text 3 for Python development</title><link>https://syndbg.github.io/linux-setting-up-sublime-text-3-for-python-development.html</link><description>&lt;h2&gt;I assume you have already installed Sublime Text 3, if not:&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/sublime-text-3 sudo apt-get update sudo apt-get install sublime-text-installer&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Packages you'll definitely need to do Python development&lt;/h2&gt;

&lt;h3&gt;First of all install Package Control (mandatory)&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://sublime.wbond.net/installation"&gt;How to install ST3 Package
Control&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/DamnWidget/anaconda"&gt;Anaconda&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Does all the linting, auto-correction and etc. you'll need for Python
development.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CTRL+SHIFT+P and write Install Package, Enter&lt;/li&gt;
&lt;li&gt;Write Anaconda, Enter. Done!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Optional, but useful packages&lt;/h2&gt;

&lt;h3&gt;&lt;a href="https://github.com/facelessuser/BracketHighlighter"&gt;BracketHighlighter&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Highlight free spaces (%20) in highlighted text.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CTRL+SHIFT+P and write Install Package, Enter&lt;/li&gt;
&lt;li&gt;Write BracketHighlighter, Enter. Done!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/titoBouzout/SideBarEnhancements"&gt;SideBarEnhancements&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Adds more options to the open files sidebar.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CTRL+SHIFT+P and write Install Package, Enter&lt;/li&gt;
&lt;li&gt;Write SideBarEnhancements, Enter. Done!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/kemayo/sublime-text-git/wiki"&gt;Git&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Git integration through the command palette&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CTRL+SHIFT+P and write Install Package, Enter&lt;/li&gt;
&lt;li&gt;Write Git, Enter. Done!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/kairyou/SublimeTmpl"&gt;SublimeTmpl&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;You can create your own file templates so you don't write the same stuff
in every file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CTRL+SHIFT+P and write Install Package, Enter&lt;/li&gt;
&lt;li&gt;Write &gt;SublimeTmpl, Enter. Done!&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Tue, 04 Mar 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-03-04:linux-setting-up-sublime-text-3-for-python-development.html</guid><category></category></item><item><title>Ubuntu: Setting up git in under 10minutes</title><link>https://syndbg.github.io/ubuntu-setting-up-git-in-under-10minutes.html</link><description>&lt;h2&gt;&lt;a href="http://cli.learncodethehardway.org/book/"&gt;Become familiar with the Terminal beforehand.&lt;/a&gt;&lt;/h2&gt;

&lt;h2&gt;&lt;a href="http://en.wikipedia.org/wiki/Git_(software)"&gt;What is git?&lt;/a&gt;&lt;/h2&gt;

&lt;h2&gt;&lt;a href="http://en.wikipedia.org/wiki/GitHub"&gt;What is Github?&lt;/a&gt;&lt;/h2&gt;

&lt;h2&gt;Setting it up:&lt;/h2&gt;

&lt;p&gt;​1) Register at &lt;a href="https://github.com/join‎"&gt;github&lt;/a&gt; and login.&lt;br /&gt;
2) Open the Terminal, install git&lt;br /&gt;
&lt;code&gt;sudo apt-get install git sudo apt-get update&lt;/code&gt;&lt;br /&gt;
3) Setup your git with your github username and email:  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git config --global user.name "Your Name" git config --global user.email "you@somewhere.com"&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;What do you want to do?&lt;/h2&gt;

&lt;h3&gt;Start my own repository and upload code as fast as possible:&lt;/h3&gt;

&lt;p&gt;http://www.youtube.com/watch?v=ABYHBOE5oU4&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/new"&gt;Create a new repository&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;mkdir YOURrepository cd YOURrepository git init gedit README.md git add README.md gedit Hello.py git add Hello.py git status git commit -m "init or whatever" git remote add origin https://github.com/yourUSERNAME/yourREPOSITORY.git git push -u origin master git status&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;And if you still feel uncomfortable to use Terminal git, &lt;a href="http://www.maketecheasier.com/6-useful-graphical-git-client-for-linux/"&gt;here are some graphical git clients for Linux&lt;/a&gt;&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Tue, 25 Feb 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-02-25:ubuntu-setting-up-git-in-under-10minutes.html</guid><category></category></item><item><title>Making the switch to Ubuntu. How to install PPAs</title><link>https://syndbg.github.io/making-the-switch-to-ubuntu-how-to-install-ppas.html</link><description>&lt;p&gt;If you want instructions how to make a liveCD/liveUSB and how to install
Ubuntu head -
&lt;a href="http://www.ubuntu.com/download/desktop/install-desktop-latest"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;What is a PPA?&lt;/h2&gt;

&lt;p&gt;Personal Package Archive, stuff that isn't included by default in the
OS, mostly developed by people not affiliated to the official developers
of Ubuntu (in our case).  INSTALL PPAs WITH CARE! You've been warned.&lt;/p&gt;

&lt;p&gt;First of all open the Terminal (&lt;em&gt;CTRL + ALT + T&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mostly everything you'll do in the future will involve around these
commands: &lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Order of installing a PPA:&lt;/h2&gt;

&lt;p&gt;1) &lt;em&gt;sudo add-apt-repository&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2) &lt;em&gt;sudo apt-get update&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;3) &lt;em&gt;sudo apt-get install&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;What do they mean?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;sudo&lt;/strong&gt; - super user (root access). Everything power user-ish, like
installing, updating through the terminal is involved with sudo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt&lt;/strong&gt; - advanced packaging tool (it's actually an interface).
Everything with apt- prefix is a tool which uses apt. Why use apt?
Because it's the easiest way to install stuff on Linux, without scaring
yourself to death by the new OS if you're coming from Windows (like me)
or Mac&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;sudo add-apt-repository &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;- adds a repository to the OS, but
doesn't install it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example: sudo
add-apt-repository &lt;/em&gt;http://ppa.launchpad.net/webupd8team/java/ubuntu&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;sudo apt-get update&lt;/em&gt;&lt;/strong&gt; - updates your software. Including stuff you
just installed&lt;strong&gt;
&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example: sudo apt-get update&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;sudo apt-get install&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;- yep, installs.&lt;strong&gt;
&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example: sudo apt-get install&lt;/em&gt; &lt;em&gt;oracle-java7-installer&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;A full step by step how to find and install a PPA&lt;/h2&gt;

&lt;p&gt;​1) Finding. Good source for PPAs
is &lt;a href="https://launchpad.net/~webupd8team"&gt;https://launchpad.net/~webupd8team&lt;/a&gt; and
follow &lt;a href="http://www.webupd8.org/"&gt;http://www.webupd8.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​2) Found something interesting, how to install it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If I want to install Java7 on my machine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I go here &lt;a href="https://launchpad.net/~webupd8team/+archive/java"&gt;https://launchpad.net/~webupd8team/+archive/java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the green &lt;a href="https://launchpad.net/~webupd8team/+archive/java/+index#"&gt;Technical details about this
PPA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy only and only &lt;a href="http://ppa.launchpad.net/webupd8team/java/ubuntu"&gt;http://ppa.launchpad.net/webupd8team/java/ubuntu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open the Terminal (&lt;em&gt;CTRL+ALT+T&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;Write these lines:&lt;/p&gt;

&lt;p&gt;1) &lt;em&gt;sudo
add-apt-repository &lt;a href="http://ppa.launchpad.net/webupd8team/java/ubuntu"&gt;http://ppa.launchpad.net/webupd8team/java/ubuntu&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;​2) sudo apt-get update&lt;/p&gt;

&lt;p&gt;​3) Now you wonder what can I install ? See
in &lt;a href="http://ppa.launchpad.net/webupd8team/java/ubuntu"&gt;http://ppa.launchpad.net/webupd8team/java/ubuntu&lt;/a&gt; below
the &lt;strong&gt;Overview of published packages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In our case we install Java7, so we must see oracle-java7-installer&lt;/p&gt;

&lt;p&gt;Then we write: &lt;em&gt;sudo apt-get install oracle-java7-installer&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;​4) Done! But anyway test with writing: &lt;em&gt;java&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If no error shows up but documentation, it works!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.wordpress.com/2014/02/20/ubuntu-ppas-you-should-have-installed-or-have-in-mind/"&gt;Ubuntu: PPAs you should have installed or have in mind&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 20 Feb 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-02-20:making-the-switch-to-ubuntu-how-to-install-ppas.html</guid><category></category></item><item><title>Ubuntu bug solution: Keyboard's modifier keys aren't working</title><link>https://syndbg.github.io/ubuntu-horror-stories-keyboard-modifier-keys-solution.html</link><description>&lt;h2&gt;What are modifier keys?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Alt&lt;/strong&gt;, &lt;strong&gt;Control&lt;/strong&gt;, &lt;strong&gt;Shift&lt;/strong&gt; and&lt;strong&gt;Windows key&lt;/strong&gt; are modifier keys.
They're mostly used in combination with other keys.&lt;/p&gt;

&lt;p&gt;Examples: Ctrl+Alt+Delete, Alt+Tab and others...&lt;/p&gt;

&lt;h2&gt;The story:&lt;/h2&gt;

&lt;p&gt;As an owner of &lt;a href="https://www.google.bg/search?q=zowie+celeritas&amp;amp;oq=zowie+celeritas&amp;amp;aqs=chrome.0.69i59.1229j0j4&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Zowie
Celeritas&lt;/a&gt; I
understood the hard way that my keyboard isn't really supported by the
Linux kernel.&lt;/p&gt;

&lt;p&gt;Any modifier keys combinations don't work.&lt;/p&gt;

&lt;p&gt;The problem is &lt;strong&gt;not Ubuntu-specific, &lt;/strong&gt;I tried Mint and Debian -
problem still persists.&lt;/p&gt;

&lt;p&gt;This is a common problem for other keyboards too, so the solution may or
may not work for you.&lt;/p&gt;

&lt;h2&gt;The solution:&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;If your keyboard is PS/2&lt;/strong&gt; -&gt; you shouldn't have a problem to begin
with. But you can still try with an adapter from PS/2 to USB, to see if
your keyboard works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If your keyboard is USB&lt;/strong&gt; -&gt; use a USB to PS/2 adapter.
&lt;a href="http://www.mzoori.com/images/product/verybigs/ce91fffc544bdce5c10ba61e1565f0a9.jpg"&gt;This&lt;/a&gt;
has worked for many&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If your keyboard is USB but you don't have a PS/2 port&lt;/strong&gt; &lt;strong&gt;(Zowie
Celeritas and other mechanical keyboards in combination with a
laptop)&lt;/strong&gt; -&gt; If you don't have a USB to PS2 adapter buy the above one,
else use the one provided with your keyboard. Afterwards buy &lt;a href="http://www.usbwholesale.com/images/ps2%20usb%20c.jpg"&gt;this PS/2
to USB adapter&lt;/a&gt;or
a similar one. It must be a real adapter and convert the signal.  The
one I provided worked for me and many others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Good luck and I hope you resolve this problem!&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 20 Feb 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-02-20:ubuntu-horror-stories-keyboard-modifier-keys-solution.html</guid><category></category></item><item><title>Ubuntu: PPAs you should have installed or have in mind</title><link>https://syndbg.github.io/ubuntu-ppas-you-should-have-installed-or-have-in-mind.html</link><description>&lt;h2&gt;&lt;a href="http://syndbg.wordpress.com/2014/02/20/making-the-switch-to-ubuntu-how-to-install-ppas/"&gt;How to install PPAs&lt;/a&gt;&lt;/h2&gt;

&lt;h2&gt;Faster updates and installs: apt-fast&lt;/h2&gt;

&lt;h3&gt;What is apt-fast:&lt;/h3&gt;

&lt;p&gt;A script that uses command line download accelerators. It drastically
improves updating and installing&lt;/p&gt;

&lt;h3&gt;How to install:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:apt-fast/stable sudo apt-get update sudo apt-get install apt-fast&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In future you use apt-fast everywhere you would've typed apt-get&lt;/p&gt;

&lt;h3&gt;Example&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo apt-fast update sudo apt-fast upgrade sudo apt-fast install sudo apt-fast autoremove&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Manage PPAs easily: y-ppa-manager&lt;/h2&gt;

&lt;h3&gt;What is y-ppa-manager:&lt;/h3&gt;

&lt;p&gt;A tool for easy management of PPAs. You can remove/purge, update and
edit source, as in the screenshot.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.files.wordpress.com/2014/02/y-ppa-manager.png"&gt;&lt;img alt="y-ppa-manager" src="http://syndbg.files.wordpress.com/2014/02/y-ppa-manager.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;How to install:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/y-ppa-manager sudo apt-get update sudo apt-get install y-ppa-manager&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Extend battery life: tlp&lt;/h2&gt;

&lt;h3&gt;What is tlp:&lt;/h3&gt;

&lt;p&gt;A command line tool that automatically applies tweaks to reduce your
battery usage&lt;/p&gt;

&lt;h3&gt;How to install:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:linrunner/tlp sudo apt-get update sudo apt-get install tlp tlp-rdw&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will automatically start at system start-up after you restart for the
first time. However if you want to start it as fast as possible:&lt;/p&gt;

&lt;p&gt;\&amp;lt;code&lt;em&gt;sudo tlp start&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Java7: oracle-java7-installer or openjdk-7-jdk&lt;/h2&gt;

&lt;h3&gt;What is the difference between JRE and JDK:&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;JRE (Java Runtime Environment)&lt;/strong&gt; installs the Java Virtual Machine and
enables you to use any java program on your machine&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JDK (Java Development Kit)&lt;/strong&gt; does everything JRE does and also
installs the development tools to compile, debug and document your java
programs.&lt;/p&gt;

&lt;p&gt;Installing JDK from the get-go is better, so I'll show you how to
install JDK in case you decide to develop java programs in the future.&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://stackoverflow.com/a/1977354"&gt;What is the difference between openjdk and oracle jdk?&lt;/a&gt;&lt;/h3&gt;

&lt;h3&gt;How to install Oracle Java7 JDK:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/java sudo apt-get update sudo apt-get install oracle-java7-installer&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;How to install OpenJDK Java7 JDK:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install openjdk-7-jdk&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;How to test if it's installed correctly:&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Try running:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java -version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It should return something similar to:&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;java version "1.7.0_51" OpenJDK Runtime Environment (IcedTea 2.4.4) (7u51-2.4.4-0ubuntu0.13.10.1) OpenJDK 64-Bit Server VM (build 24.45-b08, mixed mode)&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Development with Sublime Text: sublime-text-2 or sublime-text-3&lt;/h2&gt;

&lt;h3&gt;Difference between ST2 and ST3:&lt;/h3&gt;

&lt;p&gt;Some plugins don't have support for ST3 yet. If you're just starting to
use Sublime Text you won't care about the support of plugins you don't
know, so go for ST3.&lt;br /&gt;
But if you're already a ST2 user, wondering if you can switch to ST3
-&gt; check with &lt;a href="http://www.caniswitchtosublimetext3.com/"&gt;Can I switch to Sublime Text
3?&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;How to install ST2 anyway&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/sublime-text-2 sudo apt-get update sudo apt-get install sublime-text-installer&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;How to install ST3:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/sublime-text-3 sudo apt-get update sudo apt-get install sublime-text-installer&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Stop hurting your eyes, use Redshift/f.lux: gtk-redshift or fluxgui&lt;/h2&gt;

&lt;h3&gt;What do both programs do?&lt;/h3&gt;

&lt;p&gt;They adjust the color temperature of the screen to adapt to the day
time. If you're an early rise or a night owl (like me), you should stop
blinding yourself and use Redshift or f.lux&lt;/p&gt;

&lt;h3&gt;What to install&lt;/h3&gt;

&lt;p&gt;I suggest Redshift because f.lux isn't supporting Ubuntu 13.10 and
probably won't support future versions (if not updated by the developer)&lt;/p&gt;

&lt;h3&gt;How to install&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:jonls/redshift-ppa sudo apt-get update sudo apt-get install gtk-redshift&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I suggest gtk-redshift over redshift. gtk-redshift has a toggle tray so
you can toggle it on/off and quit it at any time&lt;/p&gt;

&lt;h3&gt;How to use it&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://www.latlong.net/"&gt;Get your latitude and longitude&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Example command:&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;gtk-redshift -l YOUR_LATITUDE:YOUR_LONGITUDE -t DAY_TEMP:NIGHT_TEMP -g GAMMA -v&lt;/code&gt;&lt;br /&gt;
&lt;strong&gt;You can use my settings replaced with your latitude/longitude:&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;gtk-redshift -l 42.697839:23.321670 -t 5700:3600 -g 0.8 -v&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;That's all. If you have any suggestions, comment and I'll add them&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 20 Feb 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-02-20:ubuntu-ppas-you-should-have-installed-or-have-in-mind.html</guid><category></category></item><item><title>Ubuntu horror stories: No headphones sound?</title><link>https://syndbg.github.io/ubuntu-horror-stories-no-headphones-sound.html</link><description>&lt;p&gt;I'll be starting this series of blog posts about my horrible experiences
with Ubuntu.&lt;br /&gt;
Note: of course there'll be posts about the good sides of Ubuntu, which
are many but not easy to find at first if you're a newbie like me!&lt;/p&gt;

&lt;p&gt;So to introduce my setup - Windows 8.1 and Ubuntu 13.10.&lt;br /&gt;
2 partitions, no conflicts.. or so it should be.&lt;/p&gt;

&lt;p&gt;After 7 installations of different Ubuntu isos, I settled with Ubuntu
13.10 x64. I was getting accustomed to all the bugs in the OS, but
suddenly I restart with &lt;strong&gt;Shutdown -&gt; Restart&lt;/strong&gt;, boot my Windows 8.1
and I notice that I have no sound.&lt;/p&gt;

&lt;p&gt;Instantly what the hell, why are Ubuntu bugs chasing me in Windows? Well
it seemed like
&lt;a href="https://www.google.bg/search?q=ubuntu+no+sound+headphones&amp;amp;rlz=1C1CHMO_bgBG572BG572&amp;amp;oq=ubuntu+no+sound+headphones&amp;amp;aqs=chrome..69i57.3345j0j7&amp;amp;sourceid=chrome&amp;amp;espv=210&amp;amp;es_sm=93&amp;amp;ie=UTF-8#q=ubuntu+windows+no+sound&amp;amp;safe=off"&gt;this&lt;/a&gt;
is a common problem (aren't all Ubuntu problems common?
#good-ubuntu-developers)&lt;/p&gt;

&lt;p&gt;SO HOW DO I FIX THIS? Welp, you just have to use &lt;strong&gt;Shutdown -&gt;
Shutdown&lt;/strong&gt; every time you want to boot your Windows after you've used
Ubuntu.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Tue, 11 Feb 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-02-11:ubuntu-horror-stories-no-headphones-sound.html</guid><category></category></item><item><title>Programming tips: Avoiding unbalanced parentheses errors</title><link>https://syndbg.github.io/programming-tips-avoiding-unbalanced-parentheses-errors.html</link><description>&lt;p&gt;It's very common for people to have unbalanced parenthesis after hours
of work and hundreds of lines of code.&lt;br /&gt;
Also it's one of the more common questions in exams, find the
error/errors in the following code "...." and they give you way too many
parentheses.&lt;/p&gt;

&lt;p&gt;One of the more popular solutions is to use a pencil and paper to follow
the code and see the mistake, but this takes resources and much more
time than it should.&lt;/p&gt;

&lt;p&gt;The easier and better way is to count. Count what? Count the
parentheses.&lt;br /&gt;
Any opening/left parenthesis is +1, any closing/right parenthesis is
-1. The result should always be 0 and never negative!&lt;br /&gt;
So let's put this into examples.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;           &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And we notice that we have 1 remaining, which means the code is wrong.&lt;/p&gt;

&lt;p&gt;Next example&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="err"&gt;↑&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;.... wait what? We get -1. If we get -1 the code is 100% wrong.&lt;/p&gt;

&lt;p&gt;Good, now the time needed to track and correct parentheses is greatly
reduced!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Sun, 09 Feb 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-02-09:programming-tips-avoiding-unbalanced-parentheses-errors.html</guid><category></category></item><item><title>Quick reference: CSS/CSS3 Attribute selectors</title><link>https://syndbg.github.io/quick-reference-csscss3-attribute-selectors.html</link><description>&lt;p&gt;&lt;p&gt;&lt;strong&gt;The basic syntax&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;selector[attribute]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exact match&lt;/strong&gt; - finds the exact match of the value&lt;/p&gt;
&lt;p&gt;&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;selector[attribute=value]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Partial match&lt;/strong&gt; - finds a partial match of the whole word value.
Doesn't find
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;valueExample&lt;/code&gt;
or
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;value-Example&lt;/code&gt;
strings&lt;/p&gt;
&lt;p&gt;&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;selector[attribute~=value]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hyphen(dash) match&lt;/strong&gt; - finds a match of the value value seperated by
dash. Doesn't matter if it's the first or last word in the string.&lt;/p&gt;
&lt;p&gt;&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;selector[attribute|=value]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Start of value match&lt;/strong&gt; - finds the value match in the start of the
string only. Includes
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;valueExample&lt;/code&gt;
and
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;value-example&lt;/code&gt;
strings&lt;/p&gt;
&lt;p&gt;&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;selector[attribute^=value]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;End of value match&lt;/strong&gt; - finds a match of the value in the end of the
string only. Also includes
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;valueExample&lt;/code&gt;
and
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;value-example&lt;/code&gt;
strings&lt;/p&gt;
&lt;p&gt;&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;selector[attribute$=value]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Any part of value match&lt;/strong&gt; - same as partial match but includes
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;valueExample&lt;/code&gt;
and
&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;value-example&lt;/code&gt;
strings&lt;/p&gt;
&lt;p&gt;&lt;code style="background-color:salmon;font-size:1.1rem;color:white;"&gt;selector[attribute*=value]&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 30 Jan 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-01-30:quick-reference-csscss3-attribute-selectors.html</guid><category></category></item><item><title>CSS3, the 147 color names you might find useful to know!</title><link>https://syndbg.github.io/css3-the-147-color-names-you-might-find-useful-to-know.html</link><description>&lt;p&gt;The syntax is simple.&lt;/p&gt;

&lt;p&gt;Apply it with color properties like  &lt;code&gt;background-color&lt;/code&gt; or &lt;code&gt;color&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;br /&gt;
•inline&lt;br /&gt;
&lt;code&gt;style="background-color:plum"&lt;/code&gt;&lt;br /&gt;
•style element or stylesheet&lt;br /&gt;
&lt;code&gt;background-color:teal;&lt;/code&gt;&lt;/p&gt;

&lt;table style="text-align:center;border-spacing:10px;font-size:1.2em;"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="background-color:aliceblue;" width="150px" height="150px"&gt;
aliceblue

&lt;/td&gt;
&lt;td style="background-color:antiquewhite;" width="150px" height="150px"&gt;
antiquewhite

&lt;/td&gt;
&lt;td style="background-color:aqua;" width="150px" height="150px"&gt;
aqua

&lt;/td&gt;
&lt;td style="background-color:aquamarine;" width="150px" height="150px"&gt;
aquamarine

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:azure;" width="150px" height="150px"&gt;
azure

&lt;/td&gt;
&lt;td style="background-color:beige;" width="150px" height="150px"&gt;
beige

&lt;/td&gt;
&lt;td style="background-color:bisque;" width="150px" height="150px"&gt;
bisque

&lt;/td&gt;
&lt;td style="background-color:black;color:white;" width="150px" height="150px"&gt;
black

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:blanchedalmond;" width="150px" height="150px"&gt;
blanchedalmond

&lt;/td&gt;
&lt;td style="background-color:blue;color:white;" width="150px" height="150px"&gt;
blue

&lt;/td&gt;
&lt;td style="background-color:blueviolet;" width="150px" height="150px"&gt;
blueviolet

&lt;/td&gt;
&lt;td style="background-color:brown;" width="150px" height="150px"&gt;
brown

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:burlywood;" width="150px" height="150px"&gt;
burlywood

&lt;/td&gt;
&lt;td style="background-color:cadetblue;" width="150px" height="150px"&gt;
cadetblue

&lt;/td&gt;
&lt;td style="background-color:chartreuse;" width="150px" height="150px"&gt;
chartreuse

&lt;/td&gt;
&lt;td style="background-color:chocolate;" width="150px" height="150px"&gt;
chocolate

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:coral;" width="150px" height="150px"&gt;
coral

&lt;/td&gt;
&lt;td style="background-color:cornflowerblue;" width="150px" height="150px"&gt;
cornflowerblue

&lt;/td&gt;
&lt;td style="background-color:cornsilk;" width="150px" height="150px"&gt;
cornsilk

&lt;/td&gt;
&lt;td style="background-color:crimson;" width="150px" height="150px"&gt;
crimson

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:cyan;" width="150px" height="150px"&gt;
cyan

&lt;/td&gt;
&lt;td style="background-color:darkblue;color:white;" width="150px" height="150px"&gt;
darkblue

&lt;/td&gt;
&lt;td style="background-color:darkcyan;" width="150px" height="150px"&gt;
darkcyan

&lt;/td&gt;
&lt;td style="background-color:darkgoldenrod;" width="150px" height="150px"&gt;
darkgoldenrod

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:darkgray;" width="150px" height="150px"&gt;
darkgray

&lt;/td&gt;
&lt;td style="background-color:darkgreen;" width="150px" height="150px"&gt;
darkgreen

&lt;/td&gt;
&lt;td style="background-color:darkgrey;" width="150px" height="150px"&gt;
darkgrey

&lt;/td&gt;
&lt;td style="background-color:darkkhaki;" width="150px" height="150px"&gt;
darkkhaki

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:darkmagenta;" width="150px" height="150px"&gt;
darkmagenta

&lt;/td&gt;
&lt;td style="background-color:darkolivegreen;" width="150px" height="150px"&gt;
darkolivegreen

&lt;/td&gt;
&lt;td style="background-color:darkorange;" width="150px" height="150px"&gt;
darkorange

&lt;/td&gt;
&lt;td style="background-color:darkorchid;" width="150px" height="150px"&gt;
darkorchid

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:darkred;" width="150px" height="150px"&gt;
darkred

&lt;/td&gt;
&lt;td style="background-color:darksalmon;" width="150px" height="150px"&gt;
darksalmon

&lt;/td&gt;
&lt;td style="background-color:darkseagreen;" width="150px" height="150px"&gt;
darkseagreen

&lt;/td&gt;
&lt;td style="background-color:darkslateblue;" width="150px" height="150px"&gt;
darkslateblue

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:darkslategray;color:white;" width="150px" height="150px"&gt;
darkslategray

&lt;/td&gt;
&lt;td style="background-color:darkslategrey;color:white;" width="150px" height="150px"&gt;
darkslategrey

&lt;/td&gt;
&lt;td style="background-color:darkturquoise;" width="150px" height="150px"&gt;
darkturquoise

&lt;/td&gt;
&lt;td style="background-color:darkviolet;" width="150px" height="150px"&gt;
darkviolet

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:deeppink;" width="150px" height="150px"&gt;
deeppink

&lt;/td&gt;
&lt;td style="background-color:deepskyblue;" width="150px" height="150px"&gt;
deepskyblue

&lt;/td&gt;
&lt;td style="background-color:dimgray;" width="150px" height="150px"&gt;
dimgray

&lt;/td&gt;
&lt;td style="background-color:dimgrey;" width="150px" height="150px"&gt;
dimgrey

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:dodgerblue;" width="150px" height="150px"&gt;
dodgerblue

&lt;/td&gt;
&lt;td style="background-color:firebrick;" width="150px" height="150px"&gt;
firebrick

&lt;/td&gt;
&lt;td style="background-color:floralwhite;" width="150px" height="150px"&gt;
floralwhite

&lt;/td&gt;
&lt;td style="background-color:forestgreen;" width="150px" height="150px"&gt;
forestgreen

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:fuchsia;" width="150px" height="150px"&gt;
fuchsia

&lt;/td&gt;
&lt;td style="background-color:gainsboro;" width="150px" height="150px"&gt;
gainsboro

&lt;/td&gt;
&lt;td style="background-color:ghostwhite;" width="150px" height="150px"&gt;
ghostwhite

&lt;/td&gt;
&lt;td style="background-color:gold;" width="150px" height="150px"&gt;
gold

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:goldenrod;" width="150px" height="150px"&gt;
goldenrod

&lt;/td&gt;
&lt;td style="background-color:gray;" width="150px" height="150px"&gt;
gray

&lt;/td&gt;
&lt;td style="background-color:green;" width="150px" height="150px"&gt;
green

&lt;/td&gt;
&lt;td style="background-color:greenyellow;" width="150px" height="150px"&gt;
greenyellow

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:grey;" width="150px" height="150px"&gt;
grey

&lt;/td&gt;
&lt;td style="background-color:honeydew;" width="150px" height="150px"&gt;
honeydew

&lt;/td&gt;
&lt;td style="background-color:hotpink;" width="150px" height="150px"&gt;
hotpink

&lt;/td&gt;
&lt;td style="background-color:indianred;" width="150px" height="150px"&gt;
indianred

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:indigo;color:white;" width="150px" height="150px"&gt;
indigo

&lt;/td&gt;
&lt;td style="background-color:ivory;" width="150px" height="150px"&gt;
ivory

&lt;/td&gt;
&lt;td style="background-color:khaki;" width="150px" height="150px"&gt;
khaki

&lt;/td&gt;
&lt;td style="background-color:lavender;" width="150px" height="150px"&gt;
lavender

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:lavenderblush;" width="150px" height="150px"&gt;
lavenderblush

&lt;/td&gt;
&lt;td style="background-color:lawngreen;" width="150px" height="150px"&gt;
lawngreen

&lt;/td&gt;
&lt;td style="background-color:lemonchiffon;" width="150px" height="150px"&gt;
lemonchiffon

&lt;/td&gt;
&lt;td style="background-color:lightblue;" width="150px" height="150px"&gt;
lightblue

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:lightcoral;" width="150px" height="150px"&gt;
lightcoral

&lt;/td&gt;
&lt;td style="background-color:lightcyan;" width="150px" height="150px"&gt;
lightcyan

&lt;/td&gt;
&lt;td style="background-color:lightgoldenrodyellow;" width="150px" height="150px"&gt;
lightgoldenrodyellow

&lt;/td&gt;
&lt;td style="background-color:lightgray;" width="150px" height="150px"&gt;
lightgray

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:lightgreen;" width="150px" height="150px"&gt;
lightgreen

&lt;/td&gt;
&lt;td style="background-color:lightgrey;" width="150px" height="150px"&gt;
lightgrey

&lt;/td&gt;
&lt;td style="background-color:lightpink;" width="150px" height="150px"&gt;
lightpink

&lt;/td&gt;
&lt;td style="background-color:lightsalmon;" width="150px" height="150px"&gt;
lightsalmon

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:lightseagreen;" width="150px" height="150px"&gt;
lightseagreen

&lt;/td&gt;
&lt;td style="background-color:lightskyblue;" width="150px" height="150px"&gt;
lightskyblue

&lt;/td&gt;
&lt;td style="background-color:lightslategray;" width="150px" height="150px"&gt;
lightslategray

&lt;/td&gt;
&lt;td style="background-color:lightslategrey;" width="150px" height="150px"&gt;
lightslategrey

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:lightsteelblue;" width="150px" height="150px"&gt;
lightsteelblue

&lt;/td&gt;
&lt;td style="background-color:lightyellow;" width="150px" height="150px"&gt;
lightyellow

&lt;/td&gt;
&lt;td style="background-color:lime;" width="150px" height="150px"&gt;
lime

&lt;/td&gt;
&lt;td style="background-color:limegreen;" width="150px" height="150px"&gt;
limegreen

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:linen;" width="150px" height="150px"&gt;
linen

&lt;/td&gt;
&lt;td style="background-color:magenta;" width="150px" height="150px"&gt;
magenta

&lt;/td&gt;
&lt;td style="background-color:maroon;" width="150px" height="150px"&gt;
maroon

&lt;/td&gt;
&lt;td style="background-color:mediumaquamarine;" width="150px" height="150px"&gt;
mediumaquamarine

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:mediumblue;color:white;" width="150px" height="150px"&gt;
mediumblue

&lt;/td&gt;
&lt;td style="background-color:mediumorchid;" width="150px" height="150px"&gt;
mediumorchid

&lt;/td&gt;
&lt;td style="background-color:mediumpurple;" width="150px" height="150px"&gt;
mediumpurple

&lt;/td&gt;
&lt;td style="background-color:mediumseagreen;" width="150px" height="150px"&gt;
mediumseagreen

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:mediumslateblue;" width="150px" height="150px"&gt;
mediumslateblue

&lt;/td&gt;
&lt;td style="background-color:mediumspringgreen;" width="150px" height="150px"&gt;
mediumspringgreen

&lt;/td&gt;
&lt;td style="background-color:mediumturquoise;" width="150px" height="150px"&gt;
mediumturquoise

&lt;/td&gt;
&lt;td style="background-color:mediumvioletred;" width="150px" height="150px"&gt;
mediumvioletred

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:midnightblue;color:white;" width="150px" height="150px"&gt;
midnightblue

&lt;/td&gt;
&lt;td style="background-color:mintcream;" width="150px" height="150px"&gt;
mintcream

&lt;/td&gt;
&lt;td style="background-color:mistyrose;" width="150px" height="150px"&gt;
mistyrose

&lt;/td&gt;
&lt;td style="background-color:moccasin;" width="150px" height="150px"&gt;
moccasin

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:navajowhite;" width="150px" height="150px"&gt;
navajowhite

&lt;/td&gt;
&lt;td style="background-color:navy;color:white;" width="150px" height="150px"&gt;
navy

&lt;/td&gt;
&lt;td style="background-color:oldlace;" width="150px" height="150px"&gt;
oldlace

&lt;/td&gt;
&lt;td style="background-color:olive;" width="150px" height="150px"&gt;
olive

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:olivedrab;" width="150px" height="150px"&gt;
olivedrab

&lt;/td&gt;
&lt;td style="background-color:orange;" width="150px" height="150px"&gt;
orange

&lt;/td&gt;
&lt;td style="background-color:orangered;" width="150px" height="150px"&gt;
orangered

&lt;/td&gt;
&lt;td style="background-color:orchid;" width="150px" height="150px"&gt;
orchid

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:palegoldenrod;" width="150px" height="150px"&gt;
palegoldenrod

&lt;/td&gt;
&lt;td style="background-color:palegreen;" width="150px" height="150px"&gt;
palegreen

&lt;/td&gt;
&lt;td style="background-color:paleturquoise;" width="150px" height="150px"&gt;
paleturquoise

&lt;/td&gt;
&lt;td style="background-color:palevioletred;" width="150px" height="150px"&gt;
palevioletred

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:papayawhip;" width="150px" height="150px"&gt;
papayawhip

&lt;/td&gt;
&lt;td style="background-color:peachpuff;" width="150px" height="150px"&gt;
peachpuff

&lt;/td&gt;
&lt;td style="background-color:peru;" width="150px" height="150px"&gt;
peru

&lt;/td&gt;
&lt;td style="background-color:pink;" width="150px" height="150px"&gt;
pink

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:plum;" width="150px" height="150px"&gt;
plum

&lt;/td&gt;
&lt;td style="background-color:powderblue;" width="150px" height="150px"&gt;
powderblue

&lt;/td&gt;
&lt;td style="background-color:purple;" width="150px" height="150px"&gt;
purple

&lt;/td&gt;
&lt;td style="background-color:red;" width="150px" height="150px"&gt;
red

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:rosybrown;" width="150px" height="150px"&gt;
rosybrown

&lt;/td&gt;
&lt;td style="background-color:royalblue;" width="150px" height="150px"&gt;
royalblue

&lt;/td&gt;
&lt;td style="background-color:saddlebrown;" width="150px" height="150px"&gt;
saddlebrown

&lt;/td&gt;
&lt;td style="background-color:salmon;" width="150px" height="150px"&gt;
salmon

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:sandybrown;" width="150px" height="150px"&gt;
sandybrown

&lt;/td&gt;
&lt;td style="background-color:seagreen;" width="150px" height="150px"&gt;
seagreen

&lt;/td&gt;
&lt;td style="background-color:seashell;" width="150px" height="150px"&gt;
seashell

&lt;/td&gt;
&lt;td style="background-color:sienna;" width="150px" height="150px"&gt;
sienna

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:silver;" width="150px" height="150px"&gt;
silver

&lt;/td&gt;
&lt;td style="background-color:skyblue;" width="150px" height="150px"&gt;
skyblue

&lt;/td&gt;
&lt;td style="background-color:slateblue;" width="150px" height="150px"&gt;
slateblue

&lt;/td&gt;
&lt;td style="background-color:slategray;" width="150px" height="150px"&gt;
slategray

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:slategrey;" width="150px" height="150px"&gt;
slategrey

&lt;/td&gt;
&lt;td style="background-color:snow;" width="150px" height="150px"&gt;
snow

&lt;/td&gt;
&lt;td style="background-color:springgreen;" width="150px" height="150px"&gt;
springgreen

&lt;/td&gt;
&lt;td style="background-color:steelblue;" width="150px" height="150px"&gt;
steelblue

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:tan;" width="150px" height="150px"&gt;
tan

&lt;/td&gt;
&lt;td style="background-color:teal;" width="150px" height="150px"&gt;
teal

&lt;/td&gt;
&lt;td style="background-color:thistle;" width="150px" height="150px"&gt;
thistle

&lt;/td&gt;
&lt;td style="background-color:tomato;" width="150px" height="150px"&gt;
tomato

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:turquoise;" width="150px" height="150px"&gt;
turquoise

&lt;/td&gt;
&lt;td style="background-color:violet;" width="150px" height="150px"&gt;
violet

&lt;/td&gt;
&lt;td style="background-color:wheat;" width="150px" height="150px"&gt;
wheat

&lt;/td&gt;
&lt;td style="background-color:white;" width="150px" height="150px"&gt;
white

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background-color:whitesmoke;" width="150px" height="150px"&gt;
whitesmoke

&lt;/td&gt;
&lt;td style="background-color:yellow;" width="150px" height="150px"&gt;
yellow

&lt;/td&gt;
&lt;td style="background-color:yellowgreen;" width="150px" height="150px"&gt;
yellowgreen

&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Wed, 29 Jan 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-01-29:css3-the-147-color-names-you-might-find-useful-to-know.html</guid><category></category></item><item><title>Fonts 101. Meet the font typefaces and differentiate them easily!</title><link>https://syndbg.github.io/fonts-101-meet-the-font-typefaces-and-differentiate-them-easily.html</link><description>&lt;p&gt;After the monospaced fonts post, I decided that it's good to go one step
back and clear up the misunderstandings with some of the font
typefaces(families).&lt;/p&gt;

&lt;p&gt;The more common typefaces are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;serif&lt;/li&gt;
&lt;li&gt;sans-serif&lt;/li&gt;
&lt;li&gt;monospace&lt;/li&gt;
&lt;li&gt;cursive&lt;/li&gt;
&lt;li&gt;fantasy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The differences can be easily seen with this (Credits &lt;a href="http://shop.oreilly.com/product/0636920023494.do"&gt;Learning Web
Design, 4th Edition&lt;/a&gt;,
great image!)&lt;/p&gt;

&lt;p&gt;&lt;a href="http://syndbg.files.wordpress.com/2014/01/learningwebdesign4thed-typefaaces.png"&gt;&lt;img alt="Image to help differentiate font
typefaces" src="http://i.imgur.com/6jIEa59.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The "weirder" ones&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;script/calligraphy&lt;/li&gt;
&lt;li&gt;symbol/icon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;calligraphy is self-explanatory, but here's an example symbol font&lt;/p&gt;

&lt;p&gt;&lt;img alt="symbol
font" src="http://speckycdn.sdm.netdna-cdn.com/wp-content/uploads/2012/01/icon_font_03.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Wed, 29 Jan 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-01-29:fonts-101-meet-the-font-typefaces-and-differentiate-them-easily.html</guid><category></category></item><item><title>CSS3 tip of the day: Responsive web design - Font-sizing with rem</title><link>https://syndbg.github.io/css3-tip-of-the-day-responsive-web-design-font-sizing-with-rem.html</link><description>&lt;p&gt;To create good responsive web design you must use proportionally-sized
text units like &lt;em&gt;em &lt;/em&gt;and&lt;em&gt; % (percents).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However, CSS3 introduces a new proportionately-sized text
unit &lt;strong&gt;&lt;em&gt;rem&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;rem&lt;/em&gt; &lt;/strong&gt;- stands for &lt;em&gt;root em&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;1em = 1 x current font size. If current font-size is 15px. 1em = 15px
and 2em = 30px and so on.&lt;/p&gt;

&lt;p&gt;But! &lt;em&gt;rem &lt;/em&gt;is always calculated relative to the font size of the
\&amp;lt;html&gt; element. Not the font size of the containing element.  3rem is
always 3 times the font size, wherever you apply it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Which browsers support this? &lt;/strong&gt;Chrome, Firefox3.6+, Safari 5+, IE9+,
Opera 11.10+ (but not 11.10)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The old common em calculation problem:&lt;/strong&gt;It always gets complicated to
calculate the resulting font sizing in pixels after applying em. Sure
it's easy to use 1 or 2em but what happens when you need more accurate
sizing like 1.64, 0.67 ... ?&lt;/p&gt;

&lt;p&gt;Well, people have thought of a solution back in the days of &lt;em&gt;em&lt;/em&gt;.
Fortunately, the same solution can be applied to &lt;em&gt;rem.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since you should be using &lt;em&gt;rem&lt;/em&gt; in the future, always make sure that
1&lt;em&gt;rem&lt;/em&gt; is equal to 10px.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How? &lt;/strong&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;62&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c"&gt;/* 10px */&lt;/span&gt;

    &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c"&gt;/* 32px */&lt;/span&gt;

    &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c"&gt;/* 16px */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Sat, 25 Jan 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-01-25:css3-tip-of-the-day-responsive-web-design-font-sizing-with-rem.html</guid><category></category></item><item><title>Work enhancement: Finding the right font</title><link>https://syndbg.github.io/work-enhancement-finding-the-right-font.html</link><description>&lt;p&gt;There are hundreds of hundreds fonts but finding the right one is hard.&lt;/p&gt;

&lt;p&gt;However, we can narrow down the search to one certain category:
&lt;em&gt;monospace(monospaced) &lt;/em&gt;fonts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is a monospaced font?&lt;/strong&gt; It's a font whose letters and characters
each occupy the same amount of horizontal space. You can also find them
as &lt;em&gt;modern &lt;/em&gt;fonts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So why bother using a monospace font? What are the benefits? &lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easier to read&lt;/li&gt;
&lt;li&gt;Similar characters are easily recognizable (like small letter L and
    big letter i)&lt;/li&gt;
&lt;li&gt;Spacing will always be the same&lt;/li&gt;
&lt;li&gt;Makes well organized and alligned code look even better (another
    reason to structure you code well)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Which are the more popular monospace fonts?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/SdigGGD.png"&gt;Consolas&lt;/a&gt; - if you use Microsoft
    Software, chances are that you already have it. It's used in almost
    every product they ship. But it's not free if you don't already have
    it from their products.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/fuCvOgG.png"&gt;Inconsolata-g&lt;/a&gt; - Inconsolata is
    considered by many, a free alternative to Consolas. The
    Inconsolata-g fixes some small "bugs" in the original Inconsolata
    font.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://s24.postimg.org/4hkuc8uz9/menlo2.png"&gt;Apple Menlo&lt;/a&gt; - I was
    going to include Monospace but it was retired by the Menlo. The
    Menlo is better no doubt!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/REoYmvQ.png"&gt;Meslo LG&lt;/a&gt; - a customized Apple
    Menlo. Actually it's the only thing closest to Menlo you'll get
    outside the OSX.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://25.media.tumblr.com/wiTflIDkmoqr6fyl6m2nhK2Oo1_500.png"&gt;DejaVu Sans
    Mono&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;a family of fonts. Used in OpenOffice. You can see it compared to
Menlo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.marksimonson.com/fonts/view/anonymous-pro"&gt;Anonymous
    Pro&lt;/a&gt; - my
    favourite one. You can see it in details
    &lt;a href="http://www.marksimonson.com/assets/content/fonts/AnonymousProSpecimen.pdf"&gt;here&lt;/a&gt; and
    you can download it
    &lt;a href="http://www.marksimonson.com/assets/content/fonts/AnonymousPro-1.002.zip"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/Xzy1ULu.png"&gt;Monofur&lt;/a&gt; - the Comic Sans MS of
    monospace fonts. I won't lie, watching it feels very refreshing
    compared to the other fonts.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/8uPQ3o9.png"&gt;Andale Mono&lt;/a&gt; - a good font, retired
    by &lt;a href="http://en.wikipedia.org/wiki/Lucida_(font)#Lucida_Console"&gt;Luicida
    Console&lt;/a&gt;.
    You can still find it in the web though.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://font.ubuntu.com/"&gt;Ubuntu Mono&lt;/a&gt; - part of Ubuntu's font
    family. It's a great font and Ubuntu users use it on a daily basis.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/RgXFGZH.png"&gt;Droid Sans Mono&lt;/a&gt; - a font family.
    Even though it's used by many, I'm still not quite sure which big
    software products use it as a main font.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/ajWyhzB.png"&gt;Terminus&lt;/a&gt; - used in Linux, MS-DOS,
    Command Prompt and other consoles as a main font. I won't lie, I
    don't like it, but some people may disagree so here it is!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codingreflection.files.wordpress.com/2012/10/envycoder-vs-sourcecodepro.png"&gt;Envy Code
    R&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;you can see it compared to Source Code Pro. Overall both are
great.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blogs.adobe.com/typblography/2012/09/source-code-pro.html"&gt;Source Code
    Pro&lt;/a&gt; -
    one of Adobe's better contributions to the IT world and I prefer it
    over Envy Code R&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope I was helpful and made it easier for you to pick the right
programming font. It's not an easy task but it makes your life better
afterwards!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Fri, 24 Jan 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-01-24:work-enhancement-finding-the-right-font.html</guid><category></category></item><item><title>Python development in Visual Studio?</title><link>https://syndbg.github.io/python-development-in-visual-studio.html</link><description>&lt;p&gt;I wasn't very fond of Microsoft's IDE until I started writing
HTML5/CSS3. Then I kind of fell in love with the native black theme, the
IntelliSense and most importantly - the debugger.&lt;br /&gt;
So I thought, what if it's also possible to write Python code there.
Well, it is!&lt;/p&gt;

&lt;p&gt;With this neat plugin called &lt;a href="http://pytools.codeplex.com/"&gt;Python Tools for Visual Studio
2.0&lt;/a&gt;. It was available for previous
version of the VS IDE, however since the 2013 version of VS, you can
have it a lot easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(Before you install Python tools)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you dig through the &lt;em&gt;New Project&lt;/em&gt; menu, surprisingly, you'll find a
Python category and it'll suggest you to download Python Tools. You
don't even have to google it!&lt;/p&gt;

&lt;p&gt;&lt;img alt="Get-Python-Tools" src="http://i.imgur.com/gzHMmAk.png" /&gt;&lt;/p&gt;

&lt;p&gt;Afterwards it's a walk in the park. You download it, install it and
you're ready to go.&lt;/p&gt;

&lt;p&gt;The Python category will look somewhat like this&lt;/p&gt;

&lt;p&gt;&lt;img alt="Python in Visual Studio
2013" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_3.png" /&gt;&lt;/p&gt;

&lt;p&gt;Happy Python times. Good job Microsoft.&lt;/p&gt;

&lt;p&gt;BUT! I have yet to fix that annoying &lt;em&gt;The application data folder for
Visual Studio could not be created &lt;/em&gt;bug....  oh well. True happiness is
a rare :D&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 23 Jan 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-01-23:python-development-in-visual-studio.html</guid><category></category></item><item><title>Hello world... duh!</title><link>https://syndbg.github.io/hello-world-duh.html</link><description>&lt;p&gt;Finally decided to make a blog.&lt;/p&gt;
&lt;p&gt;Why did I do this now and not earlier/later/never ? NO CLUE. Let's see where this goes!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Antonov</dc:creator><pubDate>Thu, 02 Jan 2014 00:00:00 +0200</pubDate><guid>tag:syndbg.github.io,2014-01-02:hello-world-duh.html</guid><category></category></item></channel></rss>